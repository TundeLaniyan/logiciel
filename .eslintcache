[{"/Users/admin/Desktop/Full stack/agency/src/index.js":"1","/Users/admin/Desktop/Full stack/agency/src/reportWebVitals.js":"2","/Users/admin/Desktop/Full stack/agency/src/App.js":"3","/Users/admin/Desktop/Full stack/agency/src/component/header/header.jsx":"4","/Users/admin/Desktop/Full stack/agency/src/component/footer/footer.jsx":"5","/Users/admin/Desktop/Full stack/agency/src/page/home/home.jsx":"6","/Users/admin/Desktop/Full stack/agency/src/page/imhiring/imhiring.jsx":"7","/Users/admin/Desktop/Full stack/agency/src/page/imlooking/imlooking.jsx":"8","/Users/admin/Desktop/Full stack/agency/src/page/aboutus/aboutus.jsx":"9","/Users/admin/Desktop/Full stack/agency/src/page/jobsearch/jobsearch.jsx":"10","/Users/admin/Desktop/Full stack/agency/src/util/useMediaQuery.jsx":"11","/Users/admin/Desktop/Full stack/agency/src/page/notfound/notfound.jsx":"12","/Users/admin/Desktop/Full stack/agency/src/importAll.js":"13"},{"size":500,"mtime":1608747690551,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1608747690553,"results":"16","hashOfConfig":"15"},{"size":1101,"mtime":1632165369660,"results":"17","hashOfConfig":"15"},{"size":2253,"mtime":1614178035891,"results":"18","hashOfConfig":"15"},{"size":1674,"mtime":1614178123808,"results":"19","hashOfConfig":"15"},{"size":2924,"mtime":1614177293143,"results":"20","hashOfConfig":"15"},{"size":2016,"mtime":1614176555478,"results":"21","hashOfConfig":"15"},{"size":2351,"mtime":1614176643747,"results":"22","hashOfConfig":"15"},{"size":2751,"mtime":1614176322502,"results":"23","hashOfConfig":"15"},{"size":8089,"mtime":1614177915533,"results":"24","hashOfConfig":"15"},{"size":416,"mtime":1609076948895,"results":"25","hashOfConfig":"15"},{"size":215,"mtime":1614172036987,"results":"26","hashOfConfig":"15"},{"size":314,"mtime":1614176140767,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ecf8jm",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/admin/Desktop/Full stack/agency/src/index.js",[],["56","57"],"/Users/admin/Desktop/Full stack/agency/src/reportWebVitals.js",[],"/Users/admin/Desktop/Full stack/agency/src/App.js",[],"/Users/admin/Desktop/Full stack/agency/src/component/header/header.jsx",[],"/Users/admin/Desktop/Full stack/agency/src/component/footer/footer.jsx",[],"/Users/admin/Desktop/Full stack/agency/src/page/home/home.jsx",[],"/Users/admin/Desktop/Full stack/agency/src/page/imhiring/imhiring.jsx",[],"/Users/admin/Desktop/Full stack/agency/src/page/imlooking/imlooking.jsx",[],"/Users/admin/Desktop/Full stack/agency/src/page/aboutus/aboutus.jsx",[],"/Users/admin/Desktop/Full stack/agency/src/page/jobsearch/jobsearch.jsx",["58","59"],"import React, { useEffect, useState } from \"react\";\nimport { results as data } from \"../../services/data.json\";\nimport \"./jobsearch.css\";\n\nconst JobSearch = () => {\n  const [results, setResults] = useState([]);\n  const [displayResults, setDisplayResults] = useState([]);\n  const [filter, setFilter] = useState({ area: [], contract: [], salary: [] });\n  const [filterList, setFilterList] = useState({});\n  const [filterMobile, setFilterMobile] = useState(false);\n  const [limit, setLimt] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const pageLimit = 10;\n\n  const salaryList = {\n    \"below £50,000\": [0, 50000],\n    \"£50,000 to 70,000\": [50000, 70000],\n    \"£70,000 to 90,000\": [70000, 90000],\n    \"£90,000 to £125,000\": [90000, 125000],\n    \"above £125,000\": [125000, 1000000],\n  };\n\n  useEffect(() => {\n    setResults(data);\n    setDisplayResults(data);\n    const updateFilters = (field, field2) => {\n      let category = [];\n      data.forEach((cur) => {\n        if (typeof cur[field] === \"object\") {\n          category = [...category, ...cur[field][field2]];\n        } else {\n          category = [...category, cur[field]];\n        }\n      });\n      category.sort();\n      let categoryList = {};\n      category.forEach((cur) => {\n        if (cur)\n          categoryList[cur] = categoryList[cur] ? categoryList[cur] + 1 : 1;\n      });\n      return categoryList;\n    };\n    const area = updateFilters(\"location\", \"area\");\n    delete area.UK;\n    const contract = updateFilters(\"contract_type\");\n    const salary = {};\n    Object.entries(salaryList).forEach((cur) => {\n      salary[cur[0]] = 0;\n      data.forEach((el) => {\n        if (el.salary_min <= cur[1][1] && el.salary_max > cur[1][0])\n          salary[cur[0]] += 1;\n      });\n    });\n    setFilterList({ area, contract, salary });\n  }, []);\n\n  useEffect(() => {\n    const current = results.filter((cur) => {\n      let area = false || !filter.area.length;\n      filter.area.length &&\n        cur.location.area.forEach((cur) => {\n          if (filter.area.includes(cur)) area = true;\n        });\n      const contract =\n        !filter.contract.length || filter.contract.includes(cur.contract_type);\n      let salary = false || !filter.salary.length;\n      filter.salary.length &&\n        filter.salary.forEach((el) => {\n          if (\n            cur.salary_min <= salaryList[el][1] &&\n            cur.salary_max > salaryList[el][0]\n          )\n            salary = true;\n        });\n      return area && contract && salary;\n    });\n    results.length && setDisplayResults(current);\n  }, [filter]);\n\n  const handleOnChange = (e) => {\n    const current = { ...filter };\n    const [name, value] = e.target.id.split(\"-\");\n    if (!current[name]) current[name] = [];\n    const index = current[name].indexOf(value);\n    if (index + 1) {\n      current[name].splice(index, 1);\n    } else {\n      current[name].push(value);\n    }\n    setFilter(current);\n  };\n\n  return (\n    <div className=\"jobsearch\">\n      <h1 className=\"banner-header\">Available jobs</h1>\n      <button\n        className=\"job__btn job__btn--mobile btn\"\n        onClick={() => setFilterMobile((prev) => !prev)}\n      >\n        filter\n        {filterMobile ? (\n          <span className=\"filter__limit\">&or;</span>\n        ) : (\n          <span className=\"filter__limit\">&and;</span>\n        )}\n      </button>\n      <div className=\"jobsearch__fields\">\n        <div\n          className={`job__filter ${!filterMobile && \"job__filter--m-hide\"}`}\n        >\n          {Object.entries(filterList).map((cur, i) => (\n            <div className=\"filter__container\" key={i}>\n              <div\n                className=\"filter__header\"\n                onClick={() =>\n                  Object.entries(cur[1]).length > 5 &&\n                  setLimt((prev) => (prev !== cur[0] ? cur[0] : \"\"))\n                }\n              >\n                {cur[0]}\n                {Object.entries(cur[1]).length > 5 &&\n                  (limit === cur[0] ? (\n                    <span className=\"filter__limit\">&or;</span>\n                  ) : (\n                    <span className=\"filter__limit\">&and;</span>\n                  ))}\n              </div>\n              {Object.entries(cur[1])\n                .map((el, i) => (\n                  <div className=\"filter__fields\" key={i}>\n                    <input\n                      id={`${cur[0]}-${el[0]}`}\n                      type=\"checkbox\"\n                      className=\"filter__input\"\n                      onChange={handleOnChange}\n                      value={filter[cur[0]]}\n                    />\n                    <label\n                      htmlFor={`${cur[0]}-${el[0]}`}\n                      className=\"filter__label\"\n                    >\n                      {el[0]}\n                    </label>\n                    <div className=\"filter__number\">({el[1]})</div>\n                  </div>\n                ))\n                .slice(\n                  0,\n                  limit === cur[0] ? Object.entries(cur[1]).length - 1 : 5\n                )}\n            </div>\n          ))}\n          <button\n            className=\"job__btn job__btn--mobile btn job__btn--close\"\n            onClick={() => setFilterMobile(false)}\n          >\n            close\n          </button>\n        </div>\n        <div className=\"job\">\n          {displayResults\n            .map((cur, i) => (\n              <div className=\"job__container\" key={i}>\n                <div className=\"job__header\">\n                  <div className=\"\">\n                    <div className=\"job__title\">{cur.title}</div>\n                    <div className=\"job__company\">\n                      {cur.company.display_name}\n                    </div>\n                  </div>\n                  <div className=\"job__sallary\">\n                    £\n                    {cur.salary_min === cur.salary_max\n                      ? cur.salary_max\n                      : `${cur.salary_min} - £${cur.salary_max}`}\n                  </div>\n                </div>\n                <div className=\"job__body\">\n                  <div className=\"job__description\">{cur.description}</div>\n                  <div className=\"job__detail\">\n                    <div className=\"job__posted-date\">\n                      Posted: {Date(cur.created).split(\"GMT\")[0]}\n                    </div>\n                    <div className=\"job__location\">\n                      Location: {cur.location.display_name}\n                    </div>\n                    <a className=\"job__btn btn\" href={cur.redirect_url}>\n                      view details\n                    </a>\n                  </div>\n                </div>\n              </div>\n            ))\n            .slice((page - 1) * pageLimit, page * pageLimit)}\n        </div>\n      </div>\n      <div className=\"pagination\">\n        <div\n          className=\"pagination__btn\"\n          style={page === 1 ? { opacity: 0.5 } : null}\n          onClick={() => page > 1 && setPage((prev) => prev - 1)}\n        >\n          {\"<<\"} Previous\n        </div>\n        <div className=\"pagination__page-container\">\n          {[...Array(Math.ceil(displayResults.length / pageLimit))].map(\n            (cur, i) => (\n              <div\n                className={`pagination__page ${\n                  i + 1 !== page && \"pagination__page--m-hide\"\n                }`}\n                style={\n                  i + 1 === page\n                    ? { fontWeight: 900, color: \"rgb(245, 81, 81)\" }\n                    : null\n                }\n                onClick={() => setPage(i + 1)}\n              >\n                {i + 1}\n              </div>\n            )\n          )}\n        </div>\n        <div\n          className=\"pagination__btn\"\n          style={\n            Math.ceil(displayResults.length / pageLimit) === page\n              ? { opacity: 0.5 }\n              : null\n          }\n          onClick={() =>\n            page < Math.ceil(displayResults.length / pageLimit) &&\n            setPage((prev) => prev + 1)\n          }\n        >\n          Next {\">>\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JobSearch;\n","/Users/admin/Desktop/Full stack/agency/src/util/useMediaQuery.jsx",[],"/Users/admin/Desktop/Full stack/agency/src/page/notfound/notfound.jsx",[],"/Users/admin/Desktop/Full stack/agency/src/importAll.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":55,"column":6,"nodeType":"66","endLine":55,"endColumn":8,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":78,"column":6,"nodeType":"66","endLine":78,"endColumn":14,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'salaryList'. Either include it or remove the dependency array.","ArrayExpression",["72"],"React Hook useEffect has missing dependencies: 'results' and 'salaryList'. Either include them or remove the dependency array.",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [salaryList]",{"range":"78","text":"79"},"Update the dependencies array to be: [filter, results, salaryList]",{"range":"80","text":"81"},[1806,1808],"[salaryList]",[2556,2564],"[filter, results, salaryList]"]